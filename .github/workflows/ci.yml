name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: poetry install --only main,dev

      - name: Lint (Ruff)
        run: poetry run ruff . 
        # Ruff will check code style, unused imports, etc. (fast linter)

      - name: Code Format (Black)
        run: poetry run black --check .
        # Black in --check mode ensures code is properly formatted

      - name: Static Type Check (MyPy)
        run: poetry run mypy .
        # MyPy verifies static typing, ensuring type correctness

      - name: Security Audit (Bandit)
        run: poetry run bandit -q -r .
        # Bandit scans the code for security issues (the -q flag for concise output)

      - name: Run Tests (Pytest)
        run: poetry run pytest --maxfail=1 --disable-warnings -q
        # Runs test suite; -q for quieter output. Adjust flags as needed for verbosity.

      - name: Build Docker image
        run: docker build -t topstep_quant:latest .
        # Ensure the Dockerfile builds successfully (CI will catch any issues in containerization)
